//
//  HomeAutoGeneratedCode.swift
//  Example
//
//  Created by Quinn on 6/5/20.
//Copyright Â© 2020 Quinn. All rights reserved.
//

import Foundation
import Viperit

////////////////////////////////////////////////////////////////////////////////
// MARK: - VIPER COMPONENTS API (Auto-generated code)
////////////////////////////////////////////////////////////////////////////////
extension HomeView {
    var presenter: HomePresenter {
        return _presenter as! HomePresenter
    }
    var displayData: HomeDisplayData {
        return _displayData as! HomeDisplayData
    }
}

////////////////////////////////////////////////////////////////////////////////
// MARK: - VIPER COMPONENTS API (Auto-generated code)
////////////////////////////////////////////////////////////////////////////////
extension HomeRouter {
    var presenter: HomePresenter {
        return _presenter as! HomePresenter
    }
}

////////////////////////////////////////////////////////////////////////////////
// MARK: - VIPER COMPONENTS API (Auto-generated code)
////////////////////////////////////////////////////////////////////////////////
extension HomeInteractor {
    var presenter: HomePresenter {
        return _presenter as! HomePresenter
    }

    var view: HomeView {
        return presenter.view as! HomeView
    }
    
    var displayData: HomeDisplayData {
        return view.displayData
    }
}

////////////////////////////////////////////////////////////////////////////////
// MARK: - VIPER COMPONENTS API (Auto-generated code)
////////////////////////////////////////////////////////////////////////////////
extension HomePresenter {
    var view: HomeViewInterface {
        return _view as! HomeViewInterface
    }
    var interactor: HomeInteractor {
        return _interactor as! HomeInteractor
    }
    var router: HomeRouter {
        return _router as! HomeRouter
    }
}

////////////////////////////////////////////////////////////////////////////////
// MARK: - VIPER ACTION API (Auto-generated code)
////////////////////////////////////////////////////////////////////////////////
class HomeBaseAction: BaseAction {
    weak var interactor: LoginInteractor!
    var presenter: LoginPresenter {
        return interactor.presenter
    }
    required init(_ interactor: LoginInteractor) {
        self.interactor = interactor
    }
    
    func receivedResponse(_ data: BaseModel?) {
        
    }
    func receivedError(_ error: ServiceError) {
        interactor.view.showError(message: error.message)
    }
}
